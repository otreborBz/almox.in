{
    "sourceFile": "src/component/buttonFloat/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1735356668474,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1735356698710,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,37 +101,7 @@\n       </TouchableWithoutFeedback>\n     </View>\n   )\n }\n-const styles = StyleSheet.create({\n-  screen: {\n-    position: 'absolute',\n-    alignItems: 'center'\n-  },\n-  button: {\n-    position: 'absolute',\n-    bottom: 10,\n-    width: 60,\n-    height: 60,\n-    borderRadius: 30, //or 60/2 \n-    justifyContent: 'center',\n-    alignItems: 'center',\n-    shadowColor: '#c8d6e5',\n-    shadowRadius: 10,\n-    shadowOpacity: 0.3,\n-    shadowOffset: {\n-      height: 10\n-    },\n-    elevation: 4\n-  },\n-  menu: {\n-    backgroundColor: '#c8d6e5'\n-  },\n-  secondary: {\n-    width: 48,\n-    height: 48,\n-    borderRadius: 24, //or 48/2\n-    backgroundColor: '#fff'\n-  }\n-})\n \n+\n export default FloatButton\n\\ No newline at end of file\n"
                },
                {
                    "date": 1735356758684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,10 @@\n import { View, Text, StyleSheet, TouchableWithoutFeedback, Animated } from 'react-native'\n \n import { Ionicons } from '@expo/vector-icons'\n \n+import stye\n+\n const FloatButton = props => {\n \n   const [animation] = useState(new Animated.Value(0))\n \n"
                },
                {
                    "date": 1735356768056,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { View, Text, StyleSheet, TouchableWithoutFeedback, Animated } from 'react-native'\n \n import { Ionicons } from '@expo/vector-icons'\n \n-import stye\n+import styles from './style'\n \n const FloatButton = props => {\n \n   const [animation] = useState(new Animated.Value(0))\n"
                },
                {
                    "date": 1735356796358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import React, { useState } from 'react'\n-import { View, Text, StyleSheet, TouchableWithoutFeedback, Animated } from 'react-native'\n+import { View, TouchableWithoutFeedback, Animated } from 'react-native'\n \n import { Ionicons } from '@expo/vector-icons'\n \n-import styles from './style'\n+import styles from './style';\n \n const FloatButton = props => {\n \n   const [animation] = useState(new Animated.Value(0))\n"
                },
                {
                    "date": 1735357571800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,98 @@\n+import React, { useState } from 'react'\n+import { View,TouchableWithoutFeedback, Animated } from 'react-native'\n+\n+import { Ionicons } from '@expo/vector-icons'\n+\n+import styles from './style';\n+\n+const FloatButton = props => {\n+\n+  const [animation] = useState(new Animated.Value(0))\n+\n+  const toogleMenu = () => {\n+    const toValue = this.open ? 0 : 1\n+\n+    Animated.spring(animation, {\n+      toValue,\n+      friction: 5,\n+      useNativeDriver: true\n+    }).start()\n+\n+    this.open = !this.open\n+  }\n+\n+  const rotation = {\n+    transform: [\n+      {\n+        rotate: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: ['0deg', '45deg']\n+        })\n+      }\n+    ]\n+  }\n+  const shareStyle = {\n+    transform: [\n+      {\n+        scale: animation\n+      },\n+      {\n+        translateY: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: [0, -70]\n+        })\n+      }\n+    ]\n+  }\n+\n+  const heartStyle = {\n+    transform: [\n+      {\n+        scale: animation\n+      },\n+      {\n+        translateY: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: [0, -130]\n+        })\n+      }\n+    ]\n+  }\n+\n+  const likeStyle = {\n+    transform: [\n+      {\n+        scale: animation\n+      },\n+      {\n+        translateY: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: [0, -190]\n+        })\n+      }\n+    ]\n+  }\n+  return (\n+\n+    <View style={{ ...styles.screen, ...props.style }}>\n+      \n+\n+      <TouchableWithoutFeedback onPress={() => { }}>\n+        <Animated.View style={[styles.button, styles.secondary, shareStyle]}>\n+          <Ionicons name='share-social-sharp' color='#231F20' size={22} />\n+        </Animated.View>\n+\n+      </TouchableWithoutFeedback>\n+\n+      <TouchableWithoutFeedback onPress={() => { toogleMenu() }}>\n+        <Animated.View style={[styles.button, styles.menu, rotation]}>\n+          <Ionicons name='add' color='#231F20' size={28} />\n+        </Animated.View>\n+\n+      </TouchableWithoutFeedback>\n+    </View>\n+  )\n+}\n+\n+\n+export default FloatButton\n\\ No newline at end of file\n"
                },
                {
                    "date": 1735357633970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,94 @@\n+import React, { useState } from 'react'\n+import { View,TouchableWithoutFeedback, Animated } from 'react-native'\n+\n+import { Ionicons } from '@expo/vector-icons'\n+\n+import styles from './style';\n+\n+const FloatButton = props => {\n+\n+  const [animation] = useState(new Animated.Value(0))\n+\n+  const toogleMenu = () => {\n+    const toValue = this.open ? 0 : 1\n+\n+    Animated.spring(animation, {\n+      toValue,\n+      friction: 5,\n+      useNativeDriver: true\n+    }).start()\n+\n+    this.open = !this.open\n+  }\n+\n+  const rotation = {\n+    transform: [\n+      {\n+        rotate: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: ['0deg', '45deg']\n+        })\n+      }\n+    ]\n+  }\n+  const shareStyle = {\n+    transform: [\n+      {\n+        scale: animation\n+      },\n+      {\n+        translateY: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: [0, -70]\n+        })\n+      }\n+    ]\n+  }\n+\n+  const heartStyle = {\n+    transform: [\n+      {\n+        scale: animation\n+      },\n+      {\n+        translateY: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: [0, -130]\n+        })\n+      }\n+    ]\n+  }\n+\n+  const likeStyle = {\n+    transform: [\n+      {\n+        scale: animation\n+      },\n+      {\n+        translateY: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: [0, -190]\n+        })\n+      }\n+    ]\n+  }\n+  return (\n+\n+    <View style={{ ...styles.screen, ...props.style }}>\n+      \n+\n+      <TouchableWithoutFeedback onPress={() => { }}>\n+        \n+\n+      <TouchableWithoutFeedback onPress={() => { toogleMenu() }}>\n+        <Animated.View style={[styles.button, styles.menu, rotation]}>\n+          <Ionicons name='add' color='#231F20' size={28} />\n+        </Animated.View>\n+\n+      </TouchableWithoutFeedback>\n+    </View>\n+  )\n+}\n+\n+\n+export default FloatButton\n\\ No newline at end of file\n"
                },
                {
                    "date": 1735357642523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,93 @@\n+import React, { useState } from 'react'\n+import { View,TouchableWithoutFeedback, Animated } from 'react-native'\n+\n+import { Ionicons } from '@expo/vector-icons'\n+\n+import styles from './style';\n+\n+const FloatButton = props => {\n+\n+  const [animation] = useState(new Animated.Value(0))\n+\n+  const toogleMenu = () => {\n+    const toValue = this.open ? 0 : 1\n+\n+    Animated.spring(animation, {\n+      toValue,\n+      friction: 5,\n+      useNativeDriver: true\n+    }).start()\n+\n+    this.open = !this.open\n+  }\n+\n+  const rotation = {\n+    transform: [\n+      {\n+        rotate: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: ['0deg', '45deg']\n+        })\n+      }\n+    ]\n+  }\n+  const shareStyle = {\n+    transform: [\n+      {\n+        scale: animation\n+      },\n+      {\n+        translateY: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: [0, -70]\n+        })\n+      }\n+    ]\n+  }\n+\n+  const heartStyle = {\n+    transform: [\n+      {\n+        scale: animation\n+      },\n+      {\n+        translateY: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: [0, -130]\n+        })\n+      }\n+    ]\n+  }\n+\n+  const likeStyle = {\n+    transform: [\n+      {\n+        scale: animation\n+      },\n+      {\n+        translateY: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: [0, -190]\n+        })\n+      }\n+    ]\n+  }\n+  return (\n+\n+    <View style={{ ...styles.screen, ...props.style }}>\n+      \n+\n+   \n+  \n+      <TouchableWithoutFeedback onPress={() => { toogleMenu() }}>\n+        <Animated.View style={[styles.button, styles.menu, rotation]}>\n+          <Ionicons name='add' color='#231F20' size={28} />\n+        </Animated.View>\n+\n+      </TouchableWithoutFeedback>\n+    </View>\n+  )\n+}\n+\n+\n+export default FloatButton\n\\ No newline at end of file\n"
                },
                {
                    "date": 1735357650766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,10 +74,8 @@\n   }\n   return (\n \n     <View style={{ ...styles.screen, ...props.style }}>\n-      \n-\n       <TouchableWithoutFeedback onPress={() => { toogleMenu() }}>\n         <Animated.View style={[styles.button, styles.menu, rotation]}>\n           <Ionicons name='add' color='#231F20' size={28} />\n         </Animated.View>\n"
                },
                {
                    "date": 1735357665019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,76 @@\n+import React, { useState } from 'react'\n+import { View,TouchableWithoutFeedback, Animated } from 'react-native'\n+\n+import { Ionicons } from '@expo/vector-icons'\n+\n+import styles from './style';\n+\n+const FloatButton = props => {\n+\n+  const [animation] = useState(new Animated.Value(0))\n+\n+  const toogleMenu = () => {\n+    const toValue = this.open ? 0 : 1\n+\n+    Animated.spring(animation, {\n+      toValue,\n+      friction: 5,\n+      useNativeDriver: true\n+    }).start()\n+\n+    this.open = !this.open\n+  }\n+\n+  const rotation = {\n+    transform: [\n+      {\n+        rotate: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: ['0deg', '45deg']\n+        })\n+      }\n+    ]\n+  }\n+  const shareStyle = {\n+    transform: [\n+      {\n+        scale: animation\n+      },\n+      {\n+        translateY: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: [0, -70]\n+        })\n+      }\n+    ]\n+  }\n+\n+  const heartStyle = {\n+    transform: [\n+      {\n+        scale: animation\n+      },\n+      {\n+        translateY: animation.interpolate({\n+          inputRange: [0, 1],\n+          outputRange: [0, -130]\n+        })\n+      }\n+    ]\n+  }\n+\n+\n+  return (\n+\n+    <View style={{ ...styles.screen, ...props.style }}>\n+      <TouchableWithoutFeedback onPress={() => { toogleMenu() }}>\n+        <Animated.View style={[styles.button, styles.menu, rotation]}>\n+          <Ionicons name='add' color='#231F20' size={28} />\n+        </Animated.View>\n+      </TouchableWithoutFeedback>\n+    </View>\n+  )\n+}\n+\n+\n+export default FloatButton\n\\ No newline at end of file\n"
                }
            ],
            "date": 1735356668474,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react'\nimport { View, Text, StyleSheet, TouchableWithoutFeedback, Animated } from 'react-native'\n\nimport { Ionicons } from '@expo/vector-icons'\n\nconst FloatButton = props => {\n\n  const [animation] = useState(new Animated.Value(0))\n\n  const toogleMenu = () => {\n    const toValue = this.open ? 0 : 1\n\n    Animated.spring(animation, {\n      toValue,\n      friction: 5,\n      useNativeDriver: true\n    }).start()\n\n    this.open = !this.open\n  }\n\n  const rotation = {\n    transform: [\n      {\n        rotate: animation.interpolate({\n          inputRange: [0, 1],\n          outputRange: ['0deg', '45deg']\n        })\n      }\n    ]\n  }\n  const shareStyle = {\n    transform: [\n      {\n        scale: animation\n      },\n      {\n        translateY: animation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, -70]\n        })\n      }\n    ]\n  }\n\n  const heartStyle = {\n    transform: [\n      {\n        scale: animation\n      },\n      {\n        translateY: animation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, -130]\n        })\n      }\n    ]\n  }\n\n  const likeStyle = {\n    transform: [\n      {\n        scale: animation\n      },\n      {\n        translateY: animation.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, -190]\n        })\n      }\n    ]\n  }\n  return (\n\n    <View style={{ ...styles.screen, ...props.style }}>\n      <TouchableWithoutFeedback onPress={() => { }}>\n        <Animated.View style={[styles.button, styles.secondary, heartStyle]}>\n          <Ionicons name='heart-outline' color='#231F20' size={22} />\n        </Animated.View>\n\n      </TouchableWithoutFeedback>\n      <TouchableWithoutFeedback onPress={() => { }}>\n        <Animated.View style={[styles.button, styles.secondary, likeStyle]}>\n          <Ionicons name='thumbs-up-outline' color='#231F20' size={22} />\n        </Animated.View>\n\n      </TouchableWithoutFeedback>\n\n      <TouchableWithoutFeedback onPress={() => { }}>\n        <Animated.View style={[styles.button, styles.secondary, shareStyle]}>\n          <Ionicons name='share-social-sharp' color='#231F20' size={22} />\n        </Animated.View>\n\n      </TouchableWithoutFeedback>\n\n      <TouchableWithoutFeedback onPress={() => { toogleMenu() }}>\n        <Animated.View style={[styles.button, styles.menu, rotation]}>\n          <Ionicons name='add' color='#231F20' size={28} />\n        </Animated.View>\n\n      </TouchableWithoutFeedback>\n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n  screen: {\n    position: 'absolute',\n    alignItems: 'center'\n  },\n  button: {\n    position: 'absolute',\n    bottom: 10,\n    width: 60,\n    height: 60,\n    borderRadius: 30, //or 60/2 \n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#c8d6e5',\n    shadowRadius: 10,\n    shadowOpacity: 0.3,\n    shadowOffset: {\n      height: 10\n    },\n    elevation: 4\n  },\n  menu: {\n    backgroundColor: '#c8d6e5'\n  },\n  secondary: {\n    width: 48,\n    height: 48,\n    borderRadius: 24, //or 48/2\n    backgroundColor: '#fff'\n  }\n})\n\nexport default FloatButton"
        }
    ]
}